# Policy Violation Checker

A Python tool that analyzes conversations against a set of rules using OpenAI's Assistant API.

## Features

- Automated policy violation checking using OpenAI's GPT models
- Colored console logging for better visibility
- Detailed error handling and logging
- Batch processing of conversations
- Results export to text file
- Type hints for better code maintainability

## Installation

1. Clone the repository:
```bash
git clone [your-repo-url]
cd policy-checker
```

2. Install dependencies:
```bash
pip install -r requirements.txt
```

3. Set up your environment:
   - Create a `.env` file in the project root
   - Add your OpenAI API key:
     ```
     OPENAI_API_KEY=your_api_key_here
     ```

## Project Structure

```
policy-checker/
├── policy_checker.py     # Main application code
├── requirements.txt      # Project dependencies
├── .env                 # Environment variables (create this)
└── home_assign/
    └── home_assign/
        ├── chat_chains.json  # Input conversations
        └── tos.txt          # Rules file
```

## Usage

1. Place your conversations in `chat_chains.json`
2. Put your rules in `tos.txt`
3. Run the script:
```bash
python policy_checker.py
```

The script will:
- Load conversations and rules
- Check each conversation against the rules
- Save results to `results_dict.txt`

## Output

Results are saved in the following format:
```
Conversation:
[conversation content]

Response:
[policy violation analysis]
----------------------------------------
```

## Error Handling

- The script includes comprehensive error handling for:
  - File operations
  - API communication
  - Data processing
- All errors are logged with appropriate context

## Dependencies

- openai>=1.0.0
- colorama>=0.4.6
- python-dotenv>=1.0.0
- pathlib>=1.0.1
- typing>=3.7.4.3
- dataclasses>=0.6

## Personal Note

thank you for getting that far in my README note.
I had a great time doing this project, thanks for the tip about Claude (: